name: Build Snapcast Client

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main", "master" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository (with submodules)
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Buildroot dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential git wget cpio rsync file bc flex bison libssl-dev libncurses5-dev python3 sudo quilt unzip libgnutls28-dev bmap-tools

      - name: Write RAUC secrets to files
        run: |
          mkdir -p buildroot-external/openssl-ca/dev/private
          printf '%s' "${{ secrets.RAUC_KEY }}" > buildroot-external/openssl-ca/dev/private/development-1.key.pem
          printf '%s' "${{ secrets.RAUC_CERT }}" > buildroot-external/openssl-ca/dev/development-1.cert.pem
          printf '%s' "${{ secrets.RAUC_CA }}" > buildroot-external/openssl-ca/dev/ca.cert.pem

      - name: Free space on build drive
        run: |
          # Inspired by https://github.com/easimon/maximize-build-space/blob/v7/action.yml
          df -h
          sudo rm -rf /usr/local/lib/android/sdk/ndk
          sudo rm -rf /opt/hostedtoolcache/CodeQL
          sudo mkdir /mnt/cache
          sudo mkdir /mnt/output
          WORKSPACE_OWNER="$(stat -c '%U:%G' "${GITHUB_WORKSPACE}")"
          # output directory is symlinked for easier access from workspace
          # but for build container it must be mounted as a volume
          sudo ln -sf /mnt/output "${GITHUB_WORKSPACE}/output"
          sudo chown -R "${WORKSPACE_OWNER}" /mnt/cache
          sudo chown -R "${WORKSPACE_OWNER}" /mnt/output
          df -h

      - name: "Restore cache: object files"
        uses: actions/cache/restore@v4
        with:
          path: /mnt/cache/cc
          key: my_build

      - name: Build default target
        run: |
          BR2_CCACHE_DIR=/mnt/cache/cc make raspberrypi4-64-rauc

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-output
          path: output/images/*.raucb

      - name: "Save cache: object files"
        uses: actions/cache/save@v4
        with:
          path: /mnt/cache/cc
          key: my_build

